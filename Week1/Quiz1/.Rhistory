myapp <- oauth_app("github", key ="98894dc73b6f62001169", secret ="b5fdb72e992c1e93a52e1f45fcb3f334eb8f0e0a")
# 3. Get OAuth credentials
github_token <- oauth2.0_token(oauth_endpoints("github"), cache=FALSE, myapp)
# 4. Use API
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/rate_limit", gtoken)
stop_for_status(req)
content(req)
library(httr)
# 1. Find OAuth settings for github:
#    http://developer.github.com/v3/oauth/
oauth_endpoints("github")
# 2. Register an application at https://github.com/settings/applications;
#    Use any URL you would like for the homepage URL (http://github.com is fine)
#    and http://localhost:1410 as the callback url
#
#    Insert your client ID and secret below - if secret is omitted, it will
#    look it up in the GITHUB_CONSUMER_SECRET environmental variable.
myapp <- oauth_app("github", key ="98894dc73b6f62001169", secret ="b5fdb72e992c1e93a52e1f45fcb3f334eb8f0e0a")
# 3. Get OAuth credentials
github_token <- oauth2.0_token(oauth_endpoints("github"), cache=FALSE, myapp)
# 4. Use API
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/rate_limit", gtoken)
stop_for_status(req)
content(req)
library(httr)
# 1. Find OAuth settings for github:
#    http://developer.github.com/v3/oauth/
oauth_endpoints("github")
# 2. Register an application at https://github.com/settings/applications;
#    Use any URL you would like for the homepage URL (http://github.com is fine)
#    and http://localhost:1410 as the callback url
#
#    Insert your client ID and secret below - if secret is omitted, it will
#    look it up in the GITHUB_CONSUMER_SECRET environmental variable.
myapp <- oauth_app("github", key ="98894dc73b6f62001169", secret ="df7e76633e47a036d5b4ac824dd14aa2ea8fad37")
# 3. Get OAuth credentials
github_token <- oauth2.0_token(oauth_endpoints("github"), cache=FALSE, myapp)
# 4. Use API
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/rate_limit", gtoken)
stop_for_status(req)
content(req)
oauth_endpoints("github")
myapp <- oauth_app("github", key ="98894dc73b6f62001169", secret ="df7e76633e47a036d5b4ac824dd14aa2ea8fad37")
github_token <- oauth2.0_token(oauth_endpoints("github"), cache=FALSE, myapp)
install.packages("httpuv")
library(httr)
# 1. Find OAuth settings for github:
#    http://developer.github.com/v3/oauth/
oauth_endpoints("github")
# 2. Register an application at https://github.com/settings/applications;
#    Use any URL you would like for the homepage URL (http://github.com is fine)
#    and http://localhost:1410 as the callback url
#
#    Insert your client ID and secret below - if secret is omitted, it will
#    look it up in the GITHUB_CONSUMER_SECRET environmental variable.
myapp <- oauth_app("github", key ="98894dc73b6f62001169", secret ="df7e76633e47a036d5b4ac824dd14aa2ea8fad37")
# 3. Get OAuth credentials
github_token <- oauth2.0_token(oauth_endpoints("github"), cache=FALSE, myapp)
library(httr)
# 1. Find OAuth settings for github:
#    http://developer.github.com/v3/oauth/
oauth_endpoints("github")
# 2. Register an application at https://github.com/settings/applications;
#    Use any URL you would like for the homepage URL (http://github.com is fine)
#    and http://localhost:1410 as the callback url
#
#    Insert your client ID and secret below - if secret is omitted, it will
#    look it up in the GITHUB_CONSUMER_SECRET environmental variable.
myapp <- oauth_app("github", key ="98894dc73b6f62001169", secret ="df7e76633e47a036d5b4ac824dd14aa2ea8fad37")
# 3. Get OAuth credentials
github_token <- oauth2.0_token(oauth_endpoints("github"), cache=FALSE, myapp)
# 4. Use API
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/rate_limit", gtoken)
stop_for_status(req)
content(req)
library(httr)
# 1. Find OAuth settings for github:
#    http://developer.github.com/v3/oauth/
oauth_endpoints("github")
# 2. Register an application at https://github.com/settings/applications;
#    Use any URL you would like for the homepage URL (http://github.com is fine)
#    and http://localhost:1410 as the callback url
#
#    Insert your client ID and secret below - if secret is omitted, it will
#    look it up in the GITHUB_CONSUMER_SECRET environmental variable.
myapp <- oauth_app("github", key ="98894dc73b6f62001169", secret ="df7e76633e47a036d5b4ac824dd14aa2ea8fad37")
# 3. Get OAuth credentials
github_token <- oauth2.0_token(oauth_endpoints("github"), cache=FALSE, myapp)
# 4. Use API
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/rate_limit", gtoken)
stop_for_status(req)
content(req)
library(httr)
# 1. Find OAuth settings for github:
#    http://developer.github.com/v3/oauth/
oauth_endpoints("github")
# 2. Register an application at https://github.com/settings/applications;
#    Use any URL you would like for the homepage URL (http://github.com is fine)
#    and http://localhost:1410 as the callback url
#
#    Insert your client ID and secret below - if secret is omitted, it will
#    look it up in the GITHUB_CONSUMER_SECRET environmental variable.
myapp <- oauth_app("github", key ="98894dc73b6f62001169", secret ="df7e76633e47a036d5b4ac824dd14aa2ea8fad37")
# 3. Get OAuth credentials
github_token <- oauth2.0_token(oauth_endpoints("github"), cache=FALSE, myapp)
# 4. Use API
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/rate_limit", gtoken)
stop_for_status(req)
content(req)
library(httr)
# 1. Find OAuth settings for github:
#    http://developer.github.com/v3/oauth/
oauth_endpoints("github")
# 2. Register an application at https://github.com/settings/applications;
#    Use any URL you would like for the homepage URL (http://github.com is fine)
#    and http://localhost:1410 as the callback url
#
#    Insert your client ID and secret below - if secret is omitted, it will
#    look it up in the GITHUB_CONSUMER_SECRET environmental variable.
myapp <- oauth_app("github", key ="98894dc73b6f62001169", secret ="df7e76633e47a036d5b4ac824dd14aa2ea8fad37")
# 3. Get OAuth credentials
github_token <- oauth2.0_token(oauth_endpoints("github"), cache=FALSE, myapp)
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv"
download.file(fileUrl, destfile="./data/microdata3.csv", method="curl")
DT <- fread("./data/microdata3.csv")
file.info("./data/microdata3.csv")$size
system.time(DT[,mean(pwgtp15),by=SEX])
system.time(mean(DT[DT$SEX==1,]$pwgtp15))+system.time(mean(DT[DT$SEX==2,]$pwgtp15))
system.time(sapply(split(DT$pwgtp15,DT$SEX),mean))
system.time(mean(DT$pwgtp15,by=DT$SEX))
system.time(tapply(DT$pwgtp15,DT$SEX,mean))
system.time(rowMeans(DT)[DT$SEX==1])+system.time(rowMeans(DT)[DT$SEX==2]
)
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv"
download.file(fileUrl, destfile="./data/microdata3.csv", method="curl")
DT <- fread("./data/microdata3.csv")
file.info("./data/microdata3.csv")$size
system.time(DT[,mean(pwgtp15),by=SEX])
system.time(mean(DT[DT$SEX==1,]$pwgtp15))+system.time(mean(DT[DT$SEX==2,]$pwgtp15))
system.time(sapply(split(DT$pwgtp15,DT$SEX),mean))
system.time(mean(DT$pwgtp15,by=DT$SEX))
system.time(tapply(DT$pwgtp15,DT$SEX,mean))
system.time(rowMeans(DT)[DT$SEX==1])+system.time(rowMeans(DT)[DT$SEX==2]
)
st = proc.time()
for (i in 1:100){
sapply(split(DT$pwgtp15,DT$SEX),mean)
}
print (proc.time() - st)
st = proc.time()
for (i in 1:100){
rowMeans(DT)[DT$SEX==1];rowMeans(DT)[DT$SEX==2]
}
print (proc.time() - st)
st = proc.time()
for (i in 1:100){
mean(DT$pwgtp15,by=DT$SEX)
}
print (proc.time() - st)
st = proc.time()
for (i in 1:100){
tapply(DT$pwgtp15,DT$SEX,mean)
}
print (proc.time() - st)
st = proc.time()
for (i in 1:100){
mean(DT[DT$SEX==1,]$pwgtp15);mean(DT[DT$SEX==2,]$pwgtp15)
}
print (proc.time() - st)
st = proc.time()
for (i in 1:100){
DT[,mean(pwgtp15),by=SEX]
}
print (proc.time() - st)
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv"
download.file(fileUrl, destfile="./data/microdata3.csv", method="curl")
DT <- fread("./data/microdata3.csv")
file.info("./data/microdata3.csv")$size
system.time(DT[,mean(pwgtp15),by=SEX])
system.time(mean(DT[DT$SEX==1,]$pwgtp15))+system.time(mean(DT[DT$SEX==2,]$pwgtp15))
system.time(sapply(split(DT$pwgtp15,DT$SEX),mean))
system.time(mean(DT$pwgtp15,by=DT$SEX))
system.time(tapply(DT$pwgtp15,DT$SEX,mean))
system.time(rowMeans(DT)[DT$SEX==1])+system.time(rowMeans(DT)[DT$SEX==2]
)
st = proc.time()
for (i in 1:100){
sapply(split(DT$pwgtp15,DT$SEX),mean)
}
print (proc.time() - st)
st = proc.time()
for (i in 1:100){
rowMeans(DT)[DT$SEX==1];rowMeans(DT)[DT$SEX==2]
}
print (proc.time() - st)
st = proc.time()
for (i in 1:100){
mean(DT$pwgtp15,by=DT$SEX)
}
print (proc.time() - st)
#D
st = proc.time()
for (i in 1:100){
tapply(DT$pwgtp15,DT$SEX,mean)
}
print (proc.time() - st)
#E
st = proc.time()
for (i in 1:100){
mean(DT[DT$SEX==1,]$pwgtp15);mean(DT[DT$SEX==2,]$pwgtp15)
}
print (proc.time() - st)
#F
st = proc.time()
for (i in 1:100){
DT[,mean(pwgtp15),by=SEX]
}
print (proc.time() - st)
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv"
download.file(fileUrl, destfile="./data/microdata3.csv", method="curl")
DT <- fread("./data/microdata3.csv")
file.info("./data/microdata3.csv")$size
system.time(DT[,mean(pwgtp15),by=SEX])
system.time(mean(DT[DT$SEX==1,]$pwgtp15))+system.time(mean(DT[DT$SEX==2,]$pwgtp15))
system.time(sapply(split(DT$pwgtp15,DT$SEX),mean))
system.time(mean(DT$pwgtp15,by=DT$SEX))
system.time(tapply(DT$pwgtp15,DT$SEX,mean))
system.time(rowMeans(DT)[DT$SEX==1])+system.time(rowMeans(DT)[DT$SEX==2]
)
#A
st = proc.time()
for (i in 1:100){
sapply(split(DT$pwgtp15,DT$SEX),mean)
}
print (proc.time() - st)
#B
st = proc.time()
for (i in 1:100){
rowMeans(DT)[DT$SEX==1];rowMeans(DT)[DT$SEX==2]
}
print (proc.time() - st)
#C
st = proc.time()
for (i in 1:100){
mean(DT$pwgtp15,by=DT$SEX)
}
print (proc.time() - st)
#D
st = proc.time()
for (i in 1:100){
tapply(DT$pwgtp15,DT$SEX,mean)
}
print (proc.time() - st)
#E
st = proc.time()
for (i in 1:100){
mean(DT[DT$SEX==1,]$pwgtp15);mean(DT[DT$SEX==2,]$pwgtp15)
}
print (proc.time() - st)
#F
st = proc.time()
for (i in 1:100){
DT[,mean(pwgtp15),by=SEX]
}
print (proc.time() - st)
mean(DT[DT$SEX==1,]$pwgtp15);mean(DT[DT$SEX==2,]$pwgtp15)
setwd("~/mailDisk/Coursera/Geeting and Cleaning data/Week1/Quiz1")
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv"
download.file(fileUrl, destfile="./data/microdata3.csv", method="curl")
DT <- fread("./data/microdata3.csv")
file.info("./data/microdata3.csv")$size
system.time(DT[,mean(pwgtp15),by=SEX])
system.time(mean(DT[DT$SEX==1,]$pwgtp15))+system.time(mean(DT[DT$SEX==2,]$pwgtp15))
system.time(sapply(split(DT$pwgtp15,DT$SEX),mean))
system.time(mean(DT$pwgtp15,by=DT$SEX))
system.time(tapply(DT$pwgtp15,DT$SEX,mean))
system.time(rowMeans(DT)[DT$SEX==1])+system.time(rowMeans(DT)[DT$SEX==2]
)
#A
st = proc.time()
for (i in 1:100){
sapply(split(DT$pwgtp15,DT$SEX),mean)
}
print (proc.time() - st)
#B
st = proc.time()
for (i in 1:100){
rowMeans(DT)[DT$SEX==1];rowMeans(DT)[DT$SEX==2]
}
print (proc.time() - st)
#C
st = proc.time()
for (i in 1:100){
mean(DT$pwgtp15,by=DT$SEX)
}
print (proc.time() - st)
#D
st = proc.time()
for (i in 1:100){
tapply(DT$pwgtp15,DT$SEX,mean)
}
print (proc.time() - st)
#E
st = proc.time()
for (i in 1:100){
mean(DT[DT$SEX==1,]$pwgtp15);mean(DT[DT$SEX==2,]$pwgtp15)
}
print (proc.time() - st)
#F
st = proc.time()
for (i in 1:100){
DT[,mean(pwgtp15),by=SEX]
}
print (proc.time() - st)
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv"
download.file(fileUrl, destfile="./data/microdata3.csv", method="curl")
DT <- fread("./data/microdata3.csv")
file.info("./data/microdata3.csv")$size
system.time(DT[,mean(pwgtp15),by=SEX])
system.time(mean(DT[DT$SEX==1,]$pwgtp15))+system.time(mean(DT[DT$SEX==2,]$pwgtp15))
system.time(sapply(split(DT$pwgtp15,DT$SEX),mean))
system.time(mean(DT$pwgtp15,by=DT$SEX))
system.time(tapply(DT$pwgtp15,DT$SEX,mean))
system.time(rowMeans(DT)[DT$SEX==1])+system.time(rowMeans(DT)[DT$SEX==2]
)
#A
st = proc.time()
for (i in 1:100){
sapply(split(DT$pwgtp15,DT$SEX),mean)
}
print (proc.time() - st)
#B
st = proc.time()
for (i in 1:100){
rowMeans(DT)[DT$SEX==1];rowMeans(DT)[DT$SEX==2]
}
print (proc.time() - st)
#C
st = proc.time()
for (i in 1:100){
mean(DT$pwgtp15,by=DT$SEX)
}
print (proc.time() - st)
#D
st = proc.time()
for (i in 1:100){
tapply(DT$pwgtp15,DT$SEX,mean)
}
print (proc.time() - st)
#E
st = proc.time()
for (i in 1:100){
mean(DT[DT$SEX==1,]$pwgtp15);mean(DT[DT$SEX==2,]$pwgtp15)
}
print (proc.time() - st)
#F
st = proc.time()
for (i in 1:100){
DT[,mean(pwgtp15),by=SEX]
}
print (proc.time() - st)
DT
clear()
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv"
download.file(fileUrl, destfile="./data/microdata3.csv", method="curl")
DT <- fread("./data/microdata3.csv")
file.info("./data/microdata3.csv")$size
system.time(DT[,mean(pwgtp15),by=SEX])
system.time(mean(DT[DT$SEX==1,]$pwgtp15))+system.time(mean(DT[DT$SEX==2,]$pwgtp15))
system.time(sapply(split(DT$pwgtp15,DT$SEX),mean))
system.time(mean(DT$pwgtp15,by=DT$SEX))
system.time(tapply(DT$pwgtp15,DT$SEX,mean))
system.time(rowMeans(DT)[DT$SEX==1])+system.time(rowMeans(DT)[DT$SEX==2]
)
#A
st = proc.time()
for (i in 1:100){
sapply(split(DT$pwgtp15,DT$SEX),mean)
}
print (proc.time() - st)
#B
st = proc.time()
for (i in 1:100){
rowMeans(DT)[DT$SEX==1];rowMeans(DT)[DT$SEX==2]
}
print (proc.time() - st)
#C
st = proc.time()
for (i in 1:100){
mean(DT$pwgtp15,by=DT$SEX)
}
print (proc.time() - st)
#D
st = proc.time()
for (i in 1:100){
tapply(DT$pwgtp15,DT$SEX,mean)
}
print (proc.time() - st)
#E
st = proc.time()
for (i in 1:100){
mean(DT[DT$SEX==1,]$pwgtp15);mean(DT[DT$SEX==2,]$pwgtp15)
}
print (proc.time() - st)
#F
st = proc.time()
for (i in 1:100){
DT[,mean(pwgtp15),by=SEX]
}
print (proc.time() - st)
library("data.table")
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv"
download.file(fileUrl, destfile="./data/microdata3.csv", method="curl")
DT <- fread("./data/microdata3.csv")
file.info("./data/microdata3.csv")$size
system.time(DT[,mean(pwgtp15),by=SEX])
system.time(mean(DT[DT$SEX==1,]$pwgtp15))+system.time(mean(DT[DT$SEX==2,]$pwgtp15))
system.time(sapply(split(DT$pwgtp15,DT$SEX),mean))
system.time(mean(DT$pwgtp15,by=DT$SEX))
system.time(tapply(DT$pwgtp15,DT$SEX,mean))
system.time(rowMeans(DT)[DT$SEX==1])+system.time(rowMeans(DT)[DT$SEX==2]
)
#A
st = proc.time()
for (i in 1:100){
sapply(split(DT$pwgtp15,DT$SEX),mean)
}
print (proc.time() - st)
#B
st = proc.time()
for (i in 1:100){
rowMeans(DT)[DT$SEX==1];rowMeans(DT)[DT$SEX==2]
}
print (proc.time() - st)
#C
st = proc.time()
for (i in 1:100){
mean(DT$pwgtp15,by=DT$SEX)
}
print (proc.time() - st)
#D
st = proc.time()
for (i in 1:100){
tapply(DT$pwgtp15,DT$SEX,mean)
}
print (proc.time() - st)
#E
st = proc.time()
for (i in 1:100){
mean(DT[DT$SEX==1,]$pwgtp15);mean(DT[DT$SEX==2,]$pwgtp15)
}
print (proc.time() - st)
#F
st = proc.time()
for (i in 1:100){
DT[,mean(pwgtp15),by=SEX]
}
print (proc.time() - st)
library("data.table")
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv"
download.file(fileUrl, destfile="./data/microdata3.csv", method="curl")
DT <- fread("./data/microdata3.csv")
file.info("./data/microdata3.csv")$size
system.time(DT[,mean(pwgtp15),by=SEX])
system.time(mean(DT[DT$SEX==1,]$pwgtp15))+system.time(mean(DT[DT$SEX==2,]$pwgtp15))
system.time(sapply(split(DT$pwgtp15,DT$SEX),mean))
system.time(mean(DT$pwgtp15,by=DT$SEX))
system.time(tapply(DT$pwgtp15,DT$SEX,mean))
system.time(rowMeans(DT)[DT$SEX==1])+system.time(rowMeans(DT)[DT$SEX==2]
)
#A
st = proc.time()
for (i in 1:100){
sapply(split(DT$pwgtp15,DT$SEX),mean)
}
print (proc.time() - st)
#B
st = proc.time()
for (i in 1:100){
rowMeans(DT)[DT$SEX==1];rowMeans(DT)[DT$SEX==2]
}
print (proc.time() - st)
#C
st = proc.time()
for (i in 1:100){
mean(DT$pwgtp15,by=DT$SEX)
}
print (proc.time() - st)
#D
st = proc.time()
for (i in 1:100){
tapply(DT$pwgtp15,DT$SEX,mean)
}
print (proc.time() - st)
#E
st = proc.time()
for (i in 1:100){
mean(DT[DT$SEX==1,]$pwgtp15);mean(DT[DT$SEX==2,]$pwgtp15)
}
print (proc.time() - st)
#F
st = proc.time()
for (i in 1:100){
DT[,mean(pwgtp15),by=SEX]
}
print (proc.time() - st)
